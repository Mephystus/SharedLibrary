name: Build, Package & Release

on:
  push:
    branches: [ main ]

env:
  GITHUB_ARTIFACTS_FEED_URL: https://nuget.pkg.github.com/mephystus/index.json
  AZURE_ARTIFACTS_FEED_URL: https://pkgs.dev.azure.com/ricardobicho/_packaging/sharefeed/nuget/v3/index.json
  CONFIGURATION: 'Release'
  
defaults:
  run:
    working-directory: ./src
    
jobs:
  build:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: '5.x'

    - name: Setup GitVersion
      uses: gittools/actions/gitversion/execute@v0.9.7
      id: gitversion
       
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        source-url: ${{ env.AZURE_ARTIFACTS_FEED_URL }}
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.AZURE_ARTIFACTS_PAT }} 
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build -c ${{ env.CONFIGURATION }} --no-restore -p:GeneratePackageOnBuild=false

    - name: Create package(s)
      run: dotnet pack -c ${{ env.CONFIGURATION }} -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersionV2 }}
      
    - name: Publish package(s) - GitHub
      run: dotnet nuget push --source ${{ env.GITHUB_ARTIFACTS_FEED_URL }} --api-key ${{ secrets.GITHUB_TOKEN }} **/bin/Release/*.nupkg

    - name: Publish package(s) - Azure DevOps
      run: dotnet nuget push --api-key AzureArtifacts **/bin/Release/*.nupkg

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      if: github.ref == 'refs/heads/main' && steps.gitversion.outputs.CommitsSinceVersionSource > 0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.gitversion.outputs.nuGetVersionV2}}
        release_name: Release ${{ steps.gitversion.outputs.nuGetVersionV2}}
